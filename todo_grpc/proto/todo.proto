syntax = "proto3";

package todo;

service TodoService {
  // Unary RPC: Add a single task and get a response
  rpc AddTask(Task) returns (TaskResponse) {}
  
  // Server streaming RPC: Get all tasks as a stream
  rpc ListTasks(Empty) returns (stream Task) {}
  
  // Client streaming RPC: Add multiple tasks in a stream
  rpc AddMultipleTasks(stream Task) returns (TaskSummary) {}
  
  // Bidirectional streaming RPC: Update multiple tasks and get updates
  rpc UpdateTasks(stream TaskUpdate) returns (stream TaskUpdateResponse) {}
}

message Empty {}

message Task {
  string id = 1;
  string title = 2;
  string description = 3;
  bool completed = 4;
}

message TaskResponse {
  bool success = 1;
  string message = 2;
  string task_id = 3;
}

message TaskSummary {
  int32 added_count = 1;
  repeated string task_ids = 2;
  string message = 3;
}

message TaskUpdate {
  string id = 1;
  optional string title = 2;  
  optional string description = 3;
  optional bool completed = 4;
}

message TaskUpdateResponse {
  string id = 1;
  bool success = 2;
  string message = 3;
}